@startuml

!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/v2.3.0/C4_Context.puml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/v2.3.0/C4_Container.puml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/v2.3.0/C4_Component.puml


Container_Boundary(cashplot_container, "CashPlot") {
    Component(ui_component, "UI", "HTML+CSS page and TypeScript/Vue modules", "Provides a user interface and handles UI events")
    Container_Boundary(collections_container, "Collections") {
        Component(source_data_collection_component, "SourceDataCollection", "TypeScript module", "Manages a collection of source transaction data.")
        Component(category_collection_component, "CategoryCollection", "TypeScript module", "Manages a collection of categories and filters.")
        Component(account_collection_component, "AccountCollection", "TypeScript module", "Manages a collection of (virtual) accounts.")
    }
    Component(cashflow_provider_component, "CashflowProvider", "TypeScript module", "Provides monthly income/expense figures per category.")
    Component(balance_provider_component, "BalanceProvider", "TypeScript module", "Provides account balances over time and provides Plotly data for balance graphs.")
    Component(persistence_component, "Persistence", "TypeScript module", "Stores and loads settings and preferences persistently")
    Component(queries_component, "Queries", "TypeScript module", "Filters and optionally sorts or sums up transactions by category, filter and/or a specific time period")
    Component(transactions_component, "Transactions", "TypeScript module", "Assigns categories and accounts to raw transactions")
    Component(sources_component, "Sources", "TypeScript modules", "Parses raw transactions from user-provided data")
    Component(data_component, "Data", "TypeScript module", "Data definitions for module interfaces, preferences, transactions, categories, filters and accounts")

    Rel(ui_component, source_data_collection_component, "Uses")
    Rel(ui_component, category_collection_component, "Uses")
    Rel(ui_component, account_collection_component, "Uses")
    Rel(ui_component, cashflow_provider_component, "Uses")
    Rel(ui_component, balance_provider_component, "Uses")
    Rel(source_data_collection_component, persistence_component, "Uses")
    Rel(source_data_collection_component, sources_component, "Uses")
    Rel(category_collection_component, persistence_component, "Uses")
    Rel(account_collection_component, persistence_component, "Uses")
    Rel(cashflow_provider_component, collections_container, "Uses")
    Rel(cashflow_provider_component, queries_component, "Uses")
    Rel(cashflow_provider_component, transactions_component, "Uses")
    Rel(balance_provider_component, collections_container, "Uses")
    Rel(balance_provider_component, queries_component, "Uses")
    Rel(balance_provider_component, transactions_component, "Uses")
    Rel(queries_component, data_component, "Uses")
    Rel(transactions_component, data_component, "Uses")
    Rel(sources_component, data_component, "Uses")
}

System_Ext(browser_dom, "Browser DOM")
System_Ext(browser_localstorage, "Browser LocalStorage")

Rel(ui_component, browser_dom, "Interacts with")
Rel(persistence_component, browser_localstorage, "Reads from and writes to")


@enduml